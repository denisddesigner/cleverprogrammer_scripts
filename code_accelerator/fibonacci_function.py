""" Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms. """

# return the sum of the even numbers in a list

def sum_even(my_list):
	count = 0
	for num in my_list:
		if num % 2 == 0:
			count = count + num
	return count

# add the next 10 items in the fibonacci sequence and
# return the sum of the even numbers only

def fibonacci(number):

	my_list = [1, 2]

	for num in range(number - 2):
		my_list.append(my_list[-1] + my_list[-2])



	return sum_even(my_list)




print(fibonacci(12))




nine_numbers = [2, 3, 4, 5, 6, 7, 8, 9, 10]

count = 0

for number in nine_numbers:
	if number % 2 == 0:
		count = count + number
#print(count)
		